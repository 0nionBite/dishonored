// –î–∞–Ω–Ω—ã–µ: –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –∏ —Å–≤—è–∑–∏ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
const characters = [
  { 
    id: "corvo", 
    name: "–ö–æ—Ä–≤–æ –ê—Ç—Ç–∞–Ω–æ", 
    url: "src/characters/corvo/corvo.html", 
    x: 300, y: 70,
    image: "src/characters/corvo/images/corvo_portrait.jpg" 
  },
  { id: "emily", 
    name: "–≠–º–∏–ª–∏ –ö–æ–ª–¥—É–∏–Ω", 
    url: "src/characters/emily/emily.html", 
    x: 500, 
    y: 150,
    image: "src/characters/emily/images/Emily.jpg" 
  },
  { id: "jessamine", 
    name: "–î–∂–µ—Å—Å–∞–º–∏–Ω–∞ –ö–æ–ª–¥—É–∏–Ω", 
    url: "src/characters/jessamine/jessamine.html", 
    x: 400, y: 300,
    image: "src/characters/jessamine/images/Jessamine.jpg" 
  },
  { 
    id: "burrows", 
    name: "–•–∞–π—Ä–µ–º –ë–æ—Ä—Ä–æ—É–∑", 
    url: "src/characters/burrows/burrows.html", 
    x: 550, 
    y: 300,
    image: "src/characters/burrows/images/Burrows.jpg" 
   },
  { 
    id: "daud", 
    name: "–î–∞—É–¥", 
    url: "src/characters/daud/daud.html", 
    x: 200, 
    y: 350,
    image: "src/characters/daud/images/Daud.jpg" 
  }
];

const relationships = [
  { source: "corvo", target: "emily", type: "—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å" },
  { source: "corvo", target: "jessamine", type: "–≤–æ–∑–ª—é–±–ª–µ–Ω–Ω–∞—è" },
  { source: "burrows", target: "jessamine", type: "—É–±–∏–π—Ü–∞" },
  { source: "daud", target: "jessamine", type: "–Ω–∞—ë–º–Ω–∏–∫" },
  { source: "daud", target: "corvo", type: "—Å–æ–ø–µ—Ä–Ω–∏–∫" }
];

// –§–æ—Ä–º–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è Cytoscape
const elements = [];

// –£–∑–ª—ã —Å –ø–æ–∑–∏—Ü–∏—è–º–∏
characters.forEach(char => {
  elements.push({
    data: { id: char.id, label: char.name, url: char.url, image: char.image },
    position: { x: char.x, y: char.y },
    // üîí –ó–∞–ø—Ä–µ—â–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ
    grabbable: false
  });
});

// –†—ë–±—Ä–∞
relationships.forEach(rel => {
  elements.push({
    data: { source: rel.source, target: rel.target, label: rel.type }
  });
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥—Ä–∞—Ñ–∞
document.addEventListener('DOMContentLoaded', () => {
  const cy = cytoscape({
    container: document.getElementById('cy'),
    elements: elements,
    style: [
      {
        selector: 'node',
        style: {
          'background-image': 'data(image)',
          'background-fit': 'cover',
          'label': 'data(label)',
          'color': '#fff',
          'text-valign': 'center',
          'text-halign': 'center',
          'width': 60,
          'height': 60,
          'font-size': 6,
          'border-width': 2,
          'border-color': '#2980b9',
          'shape': 'ellipse'
        }
      },
      {
        selector: 'edge',
        style: {
          'width': 2,
          'line-color': '#95a5a6',
          'target-arrow-color': '#95a5a6',
          'target-arrow-shape': 'triangle',
          'curve-style': 'bezier',
          'label': 'data(label)',
          'text-background-color': '#000',
          'text-background-opacity': 0.7,
          'text-background-shape': 'rectangle',
          'color': '#ecf0f1',
          'font-size': 10
        }
      },
      {
        selector: 'node:hover',
        style: {
          'background-color': '#e74c3c',
          'cursor': 'pointer'
        }
      }
    ],
    layout: {
      name: 'preset', // ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º preset ‚Äî —Ä–∞–∑–º–µ—â–∞–µ—Ç –ø–æ position
      fit: true,
      padding: 30
    },
    // üîí –ì–ª–æ–±–∞–ª—å–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    userPanningEnabled: true,
    userZoomingEnabled: true, // –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    boxSelectionEnabled: false,
    autounselectify: true
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —É–∑–ª—É
  cy.on('tap', 'node', function (evt) {
    const node = evt.target;
    const url = node.data('url');
    if (url) {
      window.location.href = url;
    }
  });
});